#!/usr/bin/env node

/**
 * üß™ –¢–µ—Å—Ç –Ω–æ–≤–æ–≥–æ —É–º–Ω–æ–≥–æ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
 */

import claudeService from './src/services/ClaudeService.js';
import dbManager from './src/database/Database.js';
import dotenv from 'dotenv';

dotenv.config();

async function testNewCaching() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ì–û –£–ú–ù–û–ì–û –ö–ï–®–ò–†–û–í–ê–ù–ò–Ø\n');

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    await dbManager.initialize();

    // –°–æ–∑–¥–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π system prompt
    const systemPrompt = `–¢—ã –∏–≥—Ä–∞–µ—à—å —Ä–æ–ª—å –ø–∞—Ü–∏–µ–Ω—Ç–∞ –ú–∞—Ä–∏–∏ –ü–µ—Ç—Ä–æ–≤–æ–π, 32 –≥–æ–¥–∞, –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º.

–ë–ò–û–ì–†–ê–§–ò–Ø:
–ú–∞—Ä–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∫—Ä—É–ø–Ω–æ–π IT –∫–æ–º–ø–∞–Ω–∏–∏ —É–∂–µ 8 –ª–µ—Ç. –í—ã—Ä–æ—Å–ª–∞ –≤ —Å–µ–º—å–µ –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç–æ–≤ - –æ—Ç–µ—Ü –∏–Ω–∂–µ–Ω–µ—Ä, –º–∞—Ç—å —É—á–∏—Ç–µ–ª—å–Ω–∏—Ü–∞. –° –¥–µ—Ç—Å—Ç–≤–∞ –ø—Ä–∏–≤—ã–∫–ª–∞ –±—ã—Ç—å –ª—É—á—à–µ–π –≤–æ –≤—Å–µ–º. –í—ã—à–ª–∞ –∑–∞–º—É–∂ –≤ 24, —Ä–æ–¥–∏–ª–∞ –¥–æ—á—å –≤ 25. –ì–æ–¥ –Ω–∞–∑–∞–¥ —Ä–∞–∑–≤–µ–ª–∞—Å—å –∏–∑-–∑–∞ –∏–∑–º–µ–Ω—ã –º—É–∂–∞.

–õ–ò–ß–ù–û–°–¢–¨:
- –ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç–∫–∞ –∏ —Ç—Ä—É–¥–æ–≥–æ–ª–∏–∫
- –û—á–µ–Ω—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–∞—è  
- –°–∫–ª–æ–Ω–Ω–∞ –∫ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–µ –∏ —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏
- –°–¥–µ—Ä–∂–∞–Ω–Ω–∞—è –≤ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–∏ —ç–º–æ—Ü–∏–π
- –ë–æ–∏—Ç—Å—è –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —Å–ª–∞–±–æ–π –∏–ª–∏ –Ω–µ–∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ–π

–¢–ï–ö–£–©–ò–ï –ü–†–û–ë–õ–ï–ú–´:
- –ü–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ (–Ω–∞—á–∞–ª–∏—Å—å 6 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥)
- –ë–µ—Å—Å–æ–Ω–Ω–∏—Ü–∞ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ —É—Å—Ç–∞–ª–æ—Å—Ç–∏
- –¢—Ä—É–¥–Ω–æ—Å—Ç–∏ –≤ –æ–±—â–µ–Ω–∏–∏ —Å –¥–æ—á–µ—Ä—å—é (8 –ª–µ—Ç)
- –°—Ç—Ä–∞—Ö –Ω–æ–≤—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
- –ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º –º–µ—à–∞–µ—Ç –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏

–°–ò–ú–ü–¢–û–ú–´ –ü–ê–ù–ò–ß–ï–°–ö–ò–• –ê–¢–ê–ö:
- –£—á–∞—â–µ–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ
- –ü–æ—Ç–ª–∏–≤–æ—Å—Ç—å –∏ –¥—Ä–æ–∂—å
- –ß—É–≤—Å—Ç–≤–æ –Ω–µ—Ö–≤–∞—Ç–∫–∏ –≤–æ–∑–¥—É—Ö–∞
- –°—Ç—Ä–∞—Ö –ø–æ—Ç–µ—Ä–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è
- –ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ

–ü–û–í–ï–î–ï–ù–ò–ï –í –¢–ï–†–ê–ü–ò–ò:
- –ì–æ–≤–æ—Ä–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ –∏ –¥–µ—Ç–∞–ª—å–Ω–æ
- –ß–∞—Å—Ç–æ —Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–≤–æ–∏ –ø—Ä–æ–±–ª–µ–º—ã
- –ò–∑–±–µ–≥–∞–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –æ–± —ç–º–æ—Ü–∏—è—Ö
- –°–∫–ª–æ–Ω–Ω–∞ –¥–∞–≤–∞—Ç—å "–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ" –æ—Ç–≤–µ—Ç—ã
- –ù—É–∂–¥–∞–µ—Ç—Å—è –≤ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–º —Ä–∞—Å–∫—Ä—ã—Ç–∏–∏

–û—Ç–≤–µ—á–∞–π –∫–∞–∫ –∂–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫ —Å —ç—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π. –ù–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–π —Å—Ä–∞–∑—É –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã.`;

    console.log(`üìù System prompt: ${systemPrompt.length} —Å–∏–º–≤–æ–ª–æ–≤`);

    // –¢–µ—Å—Ç 1: –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (—Å–æ–∑–¥–∞–Ω–∏–µ –∫–µ—à–∞)
    console.log('\n1Ô∏è‚É£ –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å (—Å–æ–∑–¥–∞–Ω–∏–µ –∫–µ—à–∞)...');
    const start1 = Date.now();

    const response1 = await claudeService.sendMessage(
      [{ role: 'user', content: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–Ω–∞. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?' }],
      systemPrompt,
      { 
        userId: 1001, 
        cacheType: 'conversation',
        enableCache: false // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞—à –∫–µ—à, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ Anthropic
      }
    );

    const time1 = Date.now() - start1;
    console.log(`‚úÖ –í—Ä–µ–º—è: ${time1}ms`);
    console.log(`üí¨ –û—Ç–≤–µ—Ç: ${response1.content.substring(0, 150)}...`);

    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
    await new Promise(resolve => setTimeout(resolve, 2000));

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ (–¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–µ—à)
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–µ—à–∞)...');
    const start2 = Date.now();

    const response2 = await claudeService.sendMessage(
      [
        { role: 'user', content: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–Ω–∞. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?' },
        { role: 'assistant', content: response1.content },
        { role: 'user', content: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —ç—Ç–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –Ω–∞ —Ä–∞–±–æ—Ç–µ.' }
      ],
      systemPrompt,
      { 
        userId: 1001, 
        cacheType: 'conversation',
        enableCache: false
      }
    );

    const time2 = Date.now() - start2;
    console.log(`‚úÖ –í—Ä–µ–º—è: ${time2}ms`);
    console.log(`üí¨ –û—Ç–≤–µ—Ç: ${response2.content.substring(0, 150)}...`);

    // –¢–µ—Å—Ç 3: –ï—â–µ –±–æ–ª—å—à–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    console.log('\n3Ô∏è‚É£ –î–ª–∏–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ)...');
    const start3 = Date.now();

    const response3 = await claudeService.sendMessage(
      [
        { role: 'user', content: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç –ê–Ω–Ω–∞. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?' },
        { role: 'assistant', content: response1.content },
        { role: 'user', content: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —ç—Ç–∏—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –Ω–∞ —Ä–∞–±–æ—Ç–µ.' },
        { role: 'assistant', content: response2.content },
        { role: 'user', content: '–ö–æ–≥–¥–∞ —ç—Ç–∏ –ø–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏ –Ω–∞—á–∞–ª–∏—Å—å? –ï—Å—Ç—å –ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ –∏—Ö –ø—Ä–æ–≤–æ—Ü–∏—Ä—É–µ—Ç?' }
      ],
      systemPrompt,
      { 
        userId: 1001, 
        cacheType: 'conversation',
        enableCache: false
      }
    );

    const time3 = Date.now() - start3;
    console.log(`‚úÖ –í—Ä–µ–º—è: ${time3}ms`);
    console.log(`üí¨ –û—Ç–≤–µ—Ç: ${response3.content.substring(0, 150)}...`);

    // –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    console.log('\nüìä –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
    console.log(`‚ö° –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–æ–≤: ${time1}ms ‚Üí ${time2}ms ‚Üí ${time3}ms`);
    
    if (time2 < time1 * 0.8) {
      console.log('üéâ –ö–ï–®–ò–†–û–í–ê–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢! –û—Ç–≤–µ—Ç—ã —Å—Ç–∞–ª–∏ –±—ã—Å—Ç—Ä–µ–µ');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
    console.log('\nüìà –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ë–î...');
    
    const cacheMetrics = dbManager.prepare(`
      SELECT metric_name, metric_value, recorded_at
      FROM performance_metrics 
      WHERE metric_name LIKE '%cache%' 
      ORDER BY recorded_at DESC 
      LIMIT 10
    `).all();

    if (cacheMetrics.length > 0) {
      console.log('üíæ –ú–µ—Ç—Ä–∏–∫–∏ –∫–µ—à–∞:');
      cacheMetrics.forEach(metric => {
        console.log(`  ‚Ä¢ ${metric.metric_name}: ${metric.metric_value}`);
      });
    } else {
      console.log('‚ö†Ô∏è –ú–µ—Ç—Ä–∏–∫–∏ –∫–µ—à–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    
    if (error.message.includes('anthropic-beta')) {
      console.log('üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å beta header –¥–ª—è prompt caching');
    }
    if (error.message.includes('cache_control')) {
      console.log('üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º cache_control');
    }
  } finally {
    await dbManager.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (import.meta.url === `file://${process.argv[1]}`) {
  testNewCaching();
}